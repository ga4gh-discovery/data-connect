{
  "openapi": "3.0.2",
  "info": {
    "title": "GA4GH Discovery Search API",
    "version": "0.1.0",
    "description": "Search is an API for searching biomedical data.\n\nMore information on [GitHub](https://github.com/ga4gh-discovery/ga4gh-discovery-search).\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-discovery-search/develop/LICENSE"
    },
    "contact": {
      "name": "GA4GH Discovery Search Team",
      "email": "ga4gh-discovery-search@ga4gh.org"
    },
    "x-logo": {
      "url": "https://www.ga4gh.org/wp-content/themes/ga4gh-theme/gfx/GA-logo-horizontal-tag-RGB.svg"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/tables": {
      "get": {
        "summary": "List Tables",
        "description": "Returns a list of Tables.",
        "operationId": "listTables",
        "responses": {
          "200": {
            "description": "A list of Tables",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTablesResponse"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred"
          }
        }
      }
    },
    "/table/{table_name}/info": {
      "get": {
        "summary": "Get a Table",
        "description": "Returns the information about the Table identified by name.",
        "operationId": "getTable",
        "parameters": [
          {
            "name": "table_name",
            "in": "path",
            "description": "Unique Table name, unique to this implementation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "404": {
            "description": "This server does not implement the data operation"
          },
          "500": {
            "description": "An unexpected error occurred"
          }
        }
      }
    },
    "/table/{table_name}/data": {
      "get": {
        "summary": "Fetch data from a Table",
        "description": "Optional operation that returns data from a Table",
        "operationId": "getData",
        "parameters": [
          {
            "name": "table_name",
            "in": "path",
            "description": "Unique Table name, unique to this implementation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data from the Table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableData"
                }
              }
            }
          },
          "404": {
            "description": "This server does not implement the data operation"
          },
          "500": {
            "description": "An unexpected error occurred"
          }
        }
      }
    },
    "/search": {
      "post": {
        "summary": "Perform a search on Tables",
        "description": "Optional operation that accepts a Query and returns a TableData",
        "operationId": "search",
        "responses": {
          "200": {
            "description": "Query results returned as TableData",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableData"
                }
              }
            }
          },
          "404": {
            "description": "This server does not implement the search operation"
          },
          "500": {
            "description": "An unexpected error occurred"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "schema#": "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"$id\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Core schema meta-schema\",\n    \"definitions\": {\n        \"schemaArray\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"items\": { \"$ref\": \"#\" }\n        },\n        \"nonNegativeInteger\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n        },\n        \"nonNegativeIntegerDefault0\": {\n            \"allOf\": [\n                { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n                { \"default\": 0 }\n            ]\n        },\n        \"simpleTypes\": {\n            \"enum\": [\n                \"array\",\n                \"boolean\",\n                \"integer\",\n                \"null\",\n                \"number\",\n                \"object\",\n                \"string\"\n            ]\n        },\n        \"stringArray\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" },\n            \"uniqueItems\": true,\n            \"default\": []\n        }\n    },\n    \"type\": [\"object\", \"boolean\"],\n    \"properties\": {\n        \"$id\": {\n            \"type\": \"string\",\n            \"format\": \"uri-reference\"\n        },\n        \"$schema\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n        },\n        \"$ref\": {\n            \"type\": \"string\",\n            \"format\": \"uri-reference\"\n        },\n        \"$comment\": {\n            \"type\": \"string\"\n        },\n        \"title\": {\n            \"type\": \"string\"\n        },\n        \"description\": {\n            \"type\": \"string\"\n        },\n        \"default\": true,\n        \"readOnly\": {\n            \"type\": \"boolean\",\n            \"default\": false\n        },\n        \"writeOnly\": {\n            \"type\": \"boolean\",\n            \"default\": false\n        },\n        \"examples\": {\n            \"type\": \"array\",\n            \"items\": true\n        },\n        \"multipleOf\": {\n            \"type\": \"number\",\n            \"exclusiveMinimum\": 0\n        },\n        \"maximum\": {\n            \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n            \"type\": \"number\"\n        },\n        \"minimum\": {\n            \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n            \"type\": \"number\"\n        },\n        \"maxLength\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minLength\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"pattern\": {\n            \"type\": \"string\",\n            \"format\": \"regex\"\n        },\n        \"additionalItems\": { \"$ref\": \"#\" },\n        \"items\": {\n            \"anyOf\": [\n                { \"$ref\": \"#\" },\n                { \"$ref\": \"#/definitions/schemaArray\" }\n            ],\n            \"default\": true\n        },\n        \"maxItems\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minItems\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"uniqueItems\": {\n            \"type\": \"boolean\",\n            \"default\": false\n        },\n        \"contains\": { \"$ref\": \"#\" },\n        \"maxProperties\": { \"$ref\": \"#/definitions/nonNegativeInteger\" },\n        \"minProperties\": { \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\" },\n        \"required\": { \"$ref\": \"#/definitions/stringArray\" },\n        \"additionalProperties\": { \"$ref\": \"#\" },\n        \"definitions\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"$ref\": \"#\" },\n            \"default\": {}\n        },\n        \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"$ref\": \"#\" },\n            \"default\": {}\n        },\n        \"patternProperties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"$ref\": \"#\" },\n            \"propertyNames\": { \"format\": \"regex\" },\n            \"default\": {}\n        },\n        \"dependencies\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    { \"$ref\": \"#\" },\n                    { \"$ref\": \"#/definitions/stringArray\" }\n                ]\n            }\n        },\n        \"propertyNames\": { \"$ref\": \"#\" },\n        \"const\": true,\n        \"enum\": {\n            \"type\": \"array\",\n            \"items\": true,\n            \"minItems\": 1,\n            \"uniqueItems\": true\n        },\n        \"type\": {\n            \"anyOf\": [\n                { \"$ref\": \"#/definitions/simpleTypes\" },\n                {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/definitions/simpleTypes\" },\n                    \"minItems\": 1,\n                    \"uniqueItems\": true\n                }\n            ]\n        },\n        \"format\": { \"type\": \"string\" },\n        \"contentMediaType\": { \"type\": \"string\" },\n        \"contentEncoding\": { \"type\": \"string\" },\n        \"if\": { \"$ref\": \"#\" },\n        \"then\": { \"$ref\": \"#\" },\n        \"else\": { \"$ref\": \"#\" },\n        \"allOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"anyOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"oneOf\": { \"$ref\": \"#/definitions/schemaArray\" },\n        \"not\": { \"$ref\": \"#\" }\n    },\n    \"default\": true\n}\n",
      "Table": {
        "required": [
          "name",
          "data_model"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Table name"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the Table"
          },
          "data_model": {
            "$ref": "#/components/schemas/schema#"
          }
        },
        "description": "Describes a Table hosted by this search node.\n"
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "next_page_url": {
            "type": "string",
            "description": "URL pointing to the next page of the same Table. Null or absent on last page.",
            "format": "uri"
          }
        }
      },
      "ListTablesResponse": {
        "required": [
          "tables"
        ],
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Table"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "TableData": {
        "required": [
          "data_model",
          "data"
        ],
        "type": "object",
        "properties": {
          "data_model": {
            "$ref": "#/components/schemas/schema#"
          },
          "data": {
            "type": "array",
            "description": "Page of JSON values, each adhering to the schema given in the \"data_model\" property",
            "items": {
              "type": "object"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "description": "A paginated collection of tabular data"
      }
    }
  }
}